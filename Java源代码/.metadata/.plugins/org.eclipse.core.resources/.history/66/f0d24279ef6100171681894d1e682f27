package management_db;


import java.sql.SQLException;

import javax.swing.table.AbstractTableModel;

import main.Admin;
import main.Teacher;

public class Demo extends DBUtil {
	
	//向数据库中插入数据
    public void teacher_insert(Teacher teacher) throws SQLException, ClassNotFoundException {
        connection = getConn();
        
        String sql = "insert into teacher(name, college, profession, grade, work_time, tel) values(?, ?, ?, ?, ?, ?)";
        pst = connection.prepareStatement(sql);
        pst.setString(1, teacher.getName());
        //将收集的数据发送到数据库
        //对占位符设置值，占位符顺序从1开始，第一个参数是占位符的位置，第二个参数是占位符的值。
        pst.setString(2,teacher.getCollege());
        pst.setString(3, teacher.getProfession());
        pst.setString(4, teacher.getGrade());
        pst.setString(5, teacher.getWork_time());
        pst.setString(6, teacher.getTel());
        pst.executeUpdate();
        //执行sql语句
    }
    
    public class TeacherTable extends AbstractTableModel{
    	
		private static final long serialVersionUID = 1L;
		
		String[] columnNames = 
			{"编号", "姓名", "学院", "专业", "班级", "工作时间", "联系方式"};
		 Object [][]data = new Object[20][7];
		public TeacherTable() throws SQLException{
			int dex = 0;
			String sql = "select * from teacher";
			pst = connection.prepareStatement(sql);
	        resultSet = pst.executeQuery(sql);
			try {
				resultSet = pst.executeQuery(sql);
				while(resultSet.next()){
					data[dex][0] = resultSet.getInt("id");
					data[dex][1] = resultSet.getString("name");
					data[dex][2] = resultSet.getString("college");
					data[dex][3] = resultSet.getString("profession");
					data[dex][4] = resultSet.getString("grade");
					data[dex][5] = resultSet.getString("work_time");
					data[dex++][6] = resultSet.getString("tel");
				}
				resultSet.close();
			//	c.close();		
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		}

		@Override
		public int getColumnCount() {
			return columnNames.length; 
		}

		@Override
		public int getRowCount() {
			return data.length;  
		}

		@Override
		public Object getValueAt(int rowIndex, int columnIndex) {
			return data[rowIndex][columnIndex];  
		}
		public String getColumnName(int column)  
	    {  
	        return columnNames[column];  
	    } 
		public boolean isCellEditable(int rowIndex, int columnIndex)  
	    {  
			return false;
	    }
		 public void setValueAt(Object aValue, int rowIndex, int columnIndex)  
	     {  
	         data[rowIndex][columnIndex] = aValue;  
	         /*通知监听器数据单元数据已经改变*/  
	         fireTableCellUpdated(rowIndex, columnIndex);  
	     }
}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    public void admin_insert(Admin admin) throws SQLException, ClassNotFoundException {
        connection = getConn();
        
        String sql = "insert into admin(name, password) values(?, ?)";
        pst = connection.prepareStatement(sql);
        pst.setString(1, admin.getName());
        //将收集的数据发送到数据库
        //对占位符设置值，占位符顺序从1开始，第一个参数是占位符的位置，第二个参数是占位符的值。
        pst.setString(2,admin.getPassword());
        pst.executeUpdate();
        //执行sql语句
    }
    
    //查询密码
    public String selectPassWord(String uname) throws SQLException, ClassNotFoundException {
    	
    	connection = getConn();
    	
        String sql = "select * from admin where name='" + uname + "'";
        pst = connection.prepareStatement(sql);
        resultSet = pst.executeQuery(sql);
        String passWord = null;
        while (resultSet.next()){
            passWord = resultSet.getString("password");
        }
        return passWord;
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    //查询某一id的余额,用于存取款以及转账
    public int selectMoney(int uid) throws SQLException, ClassNotFoundException {
    	connection = getConn();
    	
        String sql = "select * from bank_goddess where id='"+uid+"'";
        pst = connection.prepareStatement(sql);
        resultSet = pst.executeQuery(sql);

        int money = 0;
        while ( resultSet.next() ) {
            money = resultSet.getInt("money");
        }
        return money;
    }
    
    //修改密码
    public void changePassWord(int uid, String passWord) throws SQLException, ClassNotFoundException {
    	connection = getConn();
    	
        String sql = "update bank_goddess set password=? where id=?";
        pst = connection.prepareStatement(sql);
        pst.setString(1,passWord);
        pst.setInt(2,uid);
        pst.execute();
    }
    

    
    //查询Id
    public int selectId(String username) throws SQLException, ClassNotFoundException {
    	
    	connection = getConn();
    	
        String sql = "select * from bank_goddess where user_name='"+username+"'";
        pst = connection.prepareStatement(sql);
        resultSet = pst.executeQuery(sql);
        int iD = 0;
        while (resultSet.next()){
            iD = resultSet.getInt("id");
        }
        return iD;
    }
    
    //存款
    public void saveMoney (int id, int money ) throws SQLException, ClassNotFoundException {
    	
        int sum_money = selectMoney(id) + money;
        
        connection = getConn();

        String sql = "update bank_goddess set money=? where id=?";
        pst = connection.prepareStatement(sql);
        pst.setInt(1,sum_money);
        pst.setInt(2,id);
        pst.execute();
    }
    
    //取款
    public void takeMoney (int id, int money ) throws SQLException, ClassNotFoundException {
        int sum_money = selectMoney(id) - money;
        
        connection = getConn();
        //使用表名
        String sql = "update bank_goddess set money=? where id=?";
        pst = connection.prepareStatement(sql);
        pst.setInt(1,sum_money);
        pst.setInt(2,id);
        pst.execute();
    }
    
    //删除数据库中某条记录,销户
    public void delete(int uid) throws SQLException, ClassNotFoundException {
    	connection = getConn();
    	
        String sql = "delete from bank_goddess where id='"+uid+"'";
        pst = connection.prepareStatement(sql);
        pst.executeUpdate();
    }

}
